var parameters = <%= raw @variables_as_json %>;
var words = parameters.words;
var suggestedCodes = parameters.suggested_codes;
var selectedCodes = parameters.selected_codes;
//var selectedMainCodes = parameters.selected_main_codes;

var textArea = $("#textArea");
var text = textArea.html();
words.forEach(function(item) {
  var textArray = text.match(new RegExp( "(" + reg_escape( item ) + ")" , 'gi'));
  if(textArray && item != "n") {
    textArray.forEach(function(word) {
      var highlightedWord = "<a class='highlight showWordDetails' contenteditable='true' data-toggle='tooltip' title='click for details'>" + word + "</a>";
      text=text.replace(new RegExp(word, 'g'), highlightedWord);
    });
  }
});
textArea.html(text);

function reg_escape(str) {
  return (str+'').replace(/([\\\.\+\*\?\[\^\]\$\(\)\{\}\=\!\<\>\|\:])/g, "\\$1");
}

function getCategoryFromId (categoryId) {
  var category;
  switch(categoryId) {
    case 0:
    {
      category = "mainDiagnoses";
      break;
    }
    case 1:
    {
      category = "sideDiagnoses";
      break;
    }
    case 2:
    {
      category = "procedures";
      break;
    }
  }
  return category;
}

function updateSuggestedCodes() {
  var category;
  for(var categoryId=0; categoryId < suggestedCodes.length; categoryId++){
    category = getCategoryFromId(categoryId);
    $("#"+category+"List").empty();
    for(var codeId in suggestedCodes[categoryId]){
      // only show codes that aren't already selected
      var code = suggestedCodes[categoryId][codeId].code;
      var text = suggestedCodes[categoryId][codeId].text_de;
      if(!selectedCodes[categoryId] || !(codeId in selectedCodes[categoryId])) {
        $("#"+category+"List").append("<li class='list-group-item codeItem' id='"+codeId+"' data-categoryId='"+categoryId+"'><div class='text_field'>"+code+": "+text+"</div></li>");
      }
    }
  }
}

updateSuggestedCodes();